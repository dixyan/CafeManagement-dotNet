@{
	Layout = null;
}


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Reset Password - Cafe Manager</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://unpkg.com/lucide@latest/dist/umd/lucide.js"></script>
    <style>
        .card {
            background-color: #ffffff;
            border-radius: 0.5rem; 
            border: 1px solid #e5e7eb; 
            box-shadow: 0 1px 2px 0 rgb(0 0 0 / 0.05); 
        }

        .btn {
            display: inline-flex;
            align-items: center;
            justify-content: center;
            border-radius: 0.375rem; 
            font-size: 0.875rem; 
            font-weight: 500; 
            transition: color 0.15s, background-color 0.15s, border-color 0.15s, box-shadow 0.15s;
            outline: none;
        }

            .btn:focus-visible {
                outline: none;
                box-shadow: 0 0 0 2px var(--ring-color, #000000), 0 0 0 4px var(--ring-offset-color, #ffffff);
            }

            .btn:disabled {
                opacity: 0.5;
                pointer-events: none;
            }

        .btn-primary {
            background-color: #111827; 
            color: #ffffff;
            height: 2.5rem; 
            padding: 0.5rem 1rem; 
        }

            .btn-primary:hover {
                background-color: #1f2937; 
            }

        .input {
            display: flex;
            height: 2.5rem; 
            width: 100%; 
            border-radius: 0.375rem; 
            border: 1px solid #d1d5db; 
            background-color: #ffffff;
            padding: 0.5rem 0.75rem; 
            font-size: 0.875rem; 
            line-height: 1.25rem;
            color: inherit;
        }

            .input::file-selector-button {
                border: 0;
                background: transparent;
                font-size: 0.875rem; 
                font-weight: 500; 
            }

            .input::placeholder {
                color: #6b7280; 
            }

            .input:focus-visible {
                outline: none;
                box-shadow: 0 0 0 2px #0a0a0a, 0 0 0 4px #ffffff; 
            }

            .input:disabled {
                cursor: not-allowed;
                opacity: 0.5;
            }

        .password-strength {
            height: 4px;
            border-radius: 2px;
            transition: all 0.3s ease;
        }

    </style>
</head>
<body class="min-h-screen bg-gray-50 flex items-center justify-center">
    <div class="w-full max-w-md">
        <div class="text-center mb-8">
            <div class="flex items-center justify-center gap-2 mb-4">
                <i data-lucide="coffee" class="h-8 w-8 text-orange-500"></i>
                <h1 class="text-2xl font-bold text-gray-900">Cafe Manager</h1>
            </div>
            <p class="text-gray-600">Create a new password</p>
        </div>

        <div class="card p-6">
            <div class="text-center mb-6">
                <div class="mx-auto flex items-center justify-center w-12 h-12 rounded-full bg-green-100 mb-4">
                    <i data-lucide="lock" class="h-6 w-6 text-green-600"></i>
                </div>
                <h2 class="text-lg font-semibold text-gray-900 mb-2">Set new password</h2>
                <p class="text-sm text-gray-600">
                    Choose a strong password to secure your account.
                </p>
            </div>

            <form id="resetPasswordForm" action="/authority/ResetPassword" class="space-y-4">
                <div>
                    <input type="hidden" id="Email" value="@ViewBag.UserEmail" />
                    <label for="newPassword" class="block text-sm font-medium text-gray-700 mb-1">New Password</label>
                    <div class="relative">
                        <input type="password"
                               id="newPassword"
                               name="newPassword"
                               class="input pr-10"
                               placeholder="Enter new password"
                               required>
                        <button type="button"
                                id="toggleNewPassword"
                                class="absolute inset-y-0 right-0 pr-3 flex items-center">
                            <i data-lucide="eye-off" class="h-4 w-4 text-gray-400"></i>
                        </button>
                    </div>
                    <div class="mt-2">
                        <div class="password-strength bg-gray-200" id="passwordStrength"></div>
                        <p class="text-xs text-gray-500 mt-1" id="passwordStrengthText">Password strength</p>
                    </div>
                </div>

                <div>
                    <label for="confirmPassword" class="block text-sm font-medium text-gray-700 mb-1">Confirm Password</label>
                    <div class="relative">
                        <input type="password"
                               id="confirmPassword"
                               name="confirmPassword"
                               class="input pr-10"
                               placeholder="Confirm new password"
                               required>
                        <button type="button"
                                id="toggleConfirmPassword"
                                class="absolute inset-y-0 right-0 pr-3 flex items-center">
                            <i data-lucide="eye-off" class="h-4 w-4 text-gray-400"></i>
                        </button>
                    </div>
                    <p class="text-xs text-red-500 mt-1 hidden" id="passwordMismatch">Passwords do not match</p>
                </div>

                <div class="bg-gray-50 p-3 rounded-md">
                    <p class="text-xs font-medium text-gray-700 mb-2">Password must contain:</p>
                    <ul class="text-xs text-gray-600 space-y-1">
                        <li class="flex items-center gap-2">
                            <i data-lucide="check" class="h-3 w-3 text-gray-400" id="req-length"></i>
                            At least 8 characters
                        </li>
                        <li class="flex items-center gap-2">
                            <i data-lucide="check" class="h-3 w-3 text-gray-400" id="req-uppercase"></i>
                            One uppercase letter
                        </li>
                        <li class="flex items-center gap-2">
                            <i data-lucide="check" class="h-3 w-3 text-gray-400" id="req-lowercase"></i>
                            One lowercase letter
                        </li>
                        <li class="flex items-center gap-2">
                            <i data-lucide="check" class="h-3 w-3 text-gray-400" id="req-number"></i>
                            One number
                        </li>
                    </ul>
                </div>

                <button type="submit" class="btn btn-primary w-full">
                    <i data-lucide="check-circle" class="h-4 w-4 mr-2"></i>
                    Reset Password
                </button>
            </form>
        </div>

        <div class="mt-8 text-center">
            <p class="text-xs text-gray-400">© 2024 Cafe Manager. All rights reserved.</p>
        </div>
    </div>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        $(document).ready(function() {
            lucide.createIcons();

           var userEmail = $('#Email').val();
            function setupPasswordToggle(inputId, toggleId) {
                const $input = $('#' + inputId);
                const $toggle = $('#' + toggleId);

                $toggle.on('click', function() {
                    const type = $input.attr('type') === 'password' ? 'text' : 'password';
                    $input.attr('type', type);

                    const $icon = $toggle.find('i');
                    $icon.attr('data-lucide', type === 'password' ? 'eye-off' : 'eye');
                    lucide.createIcons();
                });
            }

            setupPasswordToggle('newPassword', 'toggleNewPassword');
            setupPasswordToggle('confirmPassword', 'toggleConfirmPassword');

            function checkPasswordStrength(password) {
                let strength = 0;
                const requirements = {
                    length: password.length >= 8,
                    uppercase: /[A-Z]/.test(password),
                    lowercase: /[a-z]/.test(password),
                    number: /\d/.test(password)
                };

                $.each(requirements, function(req, valid) {
                    const $element = $('#req-' + req);
                    if (valid) {
                        $element.removeClass('text-gray-400').addClass('text-green-500');
                        strength++;
                    } else {
                        $element.removeClass('text-green-500').addClass('text-gray-400');
                    }
                });

                const $strengthBar = $('#passwordStrength');
                const $strengthText = $('#passwordStrengthText');

                if (strength === 0) {
                    $strengthBar.attr('class', 'password-strength bg-gray-200');
                    $strengthText.text('Password strength');
                } else if (strength <= 2) {
                    $strengthBar.attr('class', 'password-strength bg-red-400');
                    $strengthText.text('Weak password').attr('class', 'text-xs text-red-500 mt-1');
                } else if (strength === 3) {
                    $strengthBar.attr('class', 'password-strength bg-yellow-400');
                    $strengthText.text('Medium password').attr('class', 'text-xs text-yellow-600 mt-1');
                } else {
                    $strengthBar.attr('class', 'password-strength bg-green-400');
                    $strengthText.text('Strong password').attr('class', 'text-xs text-green-600 mt-1');
                }

                return strength === 4;
            }

            const $newPassword = $('#newPassword');
            const $confirmPassword = $('#confirmPassword');
            const $passwordMismatch = $('#passwordMismatch');

            $newPassword.on('input', function() {
                checkPasswordStrength($(this).val());
                validatePasswordMatch();
            });

            $confirmPassword.on('input', validatePasswordMatch);

            function validatePasswordMatch() {
                const newPasswordVal = $newPassword.val();
                const confirmPasswordVal = $confirmPassword.val();

                if (confirmPasswordVal && newPasswordVal !== confirmPasswordVal) {
                    $passwordMismatch.removeClass('hidden');
                    $confirmPassword.addClass('border-red-300');
                } else {
                    $passwordMismatch.addClass('hidden');
                    $confirmPassword.removeClass('border-red-300');
                }
            }

            $('#resetPasswordForm').on('submit', function(e) {
                e.preventDefault();

                const newPasswordVal = $newPassword.val();
                const confirmPasswordVal = $confirmPassword.val();

                if (!checkPasswordStrength(newPasswordVal)) {
                    alert('Please ensure your password meets all requirements.');
                    return;
                }

                if (newPasswordVal !== confirmPasswordVal) {
                    alert('Passwords do not match.');
                    return;
                }

                $.ajax({
                    url: '/Authority/ResetPassword',
                    type: 'POST',
                    data: { newPassword: newPasswordVal, UserName: userEmail },
                    success: function(response) {
                        if (response.success && response.redirectTo) {
                            window.location.href = response.redirectTo;
                        } else {
                            alert(response.message || 'Failed to reset password.');
                        }
                    },
                    error: function(err) {
                        console.error(err);
                        alert('An error occurred. Please try again.');
                    }
                });
            });
        });
    </script>


</body>
</html>


